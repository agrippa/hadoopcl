long k;
k = index;
x0 = 0;
q0_0 = 1.0 / P0;
d0_0 = (int)(k % P0);
k = (k - d0_0) / P0;
x0 += d0_0 * q0_0;
q0_1 = q0_0 / P0;
d0_1 = (int)(k % P0);
k = (k - d0_1) / P0;
x0 += d0_1 * q0_1;
q0_2 = q0_1 / P0;
d0_2 = (int)(k % P0);
k = (k - d0_2) / P0;
x0 += d0_2 * q0_2;
q0_3 = q0_2 / P0;
d0_3 = (int)(k % P0);
k = (k - d0_3) / P0;
x0 += d0_3 * q0_3;
q0_4 = q0_3 / P0;
d0_4 = (int)(k % P0);
k = (k - d0_4) / P0;
x0 += d0_4 * q0_4;
q0_5 = q0_4 / P0;
d0_5 = (int)(k % P0);
k = (k - d0_5) / P0;
x0 += d0_5 * q0_5;
q0_6 = q0_5 / P0;
d0_6 = (int)(k % P0);
k = (k - d0_6) / P0;
x0 += d0_6 * q0_6;
q0_7 = q0_6 / P0;
d0_7 = (int)(k % P0);
k = (k - d0_7) / P0;
x0 += d0_7 * q0_7;
q0_8 = q0_7 / P0;
d0_8 = (int)(k % P0);
k = (k - d0_8) / P0;
x0 += d0_8 * q0_8;
q0_9 = q0_8 / P0;
d0_9 = (int)(k % P0);
k = (k - d0_9) / P0;
x0 += d0_9 * q0_9;
q0_10 = q0_9 / P0;
d0_10 = (int)(k % P0);
k = (k - d0_10) / P0;
x0 += d0_10 * q0_10;
q0_11 = q0_10 / P0;
d0_11 = (int)(k % P0);
k = (k - d0_11) / P0;
x0 += d0_11 * q0_11;
q0_12 = q0_11 / P0;
d0_12 = (int)(k % P0);
k = (k - d0_12) / P0;
x0 += d0_12 * q0_12;
q0_13 = q0_12 / P0;
d0_13 = (int)(k % P0);
k = (k - d0_13) / P0;
x0 += d0_13 * q0_13;
q0_14 = q0_13 / P0;
d0_14 = (int)(k % P0);
k = (k - d0_14) / P0;
x0 += d0_14 * q0_14;
q0_15 = q0_14 / P0;
d0_15 = (int)(k % P0);
k = (k - d0_15) / P0;
x0 += d0_15 * q0_15;
q0_16 = q0_15 / P0;
d0_16 = (int)(k % P0);
k = (k - d0_16) / P0;
x0 += d0_16 * q0_16;
q0_17 = q0_16 / P0;
d0_17 = (int)(k % P0);
k = (k - d0_17) / P0;
x0 += d0_17 * q0_17;
q0_18 = q0_17 / P0;
d0_18 = (int)(k % P0);
k = (k - d0_18) / P0;
x0 += d0_18 * q0_18;
q0_19 = q0_18 / P0;
d0_19 = (int)(k % P0);
k = (k - d0_19) / P0;
x0 += d0_19 * q0_19;
q0_20 = q0_19 / P0;
d0_20 = (int)(k % P0);
k = (k - d0_20) / P0;
x0 += d0_20 * q0_20;
q0_21 = q0_20 / P0;
d0_21 = (int)(k % P0);
k = (k - d0_21) / P0;
x0 += d0_21 * q0_21;
q0_22 = q0_21 / P0;
d0_22 = (int)(k % P0);
k = (k - d0_22) / P0;
x0 += d0_22 * q0_22;
q0_23 = q0_22 / P0;
d0_23 = (int)(k % P0);
k = (k - d0_23) / P0;
x0 += d0_23 * q0_23;
q0_24 = q0_23 / P0;
d0_24 = (int)(k % P0);
k = (k - d0_24) / P0;
x0 += d0_24 * q0_24;
q0_25 = q0_24 / P0;
d0_25 = (int)(k % P0);
k = (k - d0_25) / P0;
x0 += d0_25 * q0_25;
q0_26 = q0_25 / P0;
d0_26 = (int)(k % P0);
k = (k - d0_26) / P0;
x0 += d0_26 * q0_26;
q0_27 = q0_26 / P0;
d0_27 = (int)(k % P0);
k = (k - d0_27) / P0;
x0 += d0_27 * q0_27;
q0_28 = q0_27 / P0;
d0_28 = (int)(k % P0);
k = (k - d0_28) / P0;
x0 += d0_28 * q0_28;
q0_29 = q0_28 / P0;
d0_29 = (int)(k % P0);
k = (k - d0_29) / P0;
x0 += d0_29 * q0_29;
q0_30 = q0_29 / P0;
d0_30 = (int)(k % P0);
k = (k - d0_30) / P0;
x0 += d0_30 * q0_30;
q0_31 = q0_30 / P0;
d0_31 = (int)(k % P0);
k = (k - d0_31) / P0;
x0 += d0_31 * q0_31;
q0_32 = q0_31 / P0;
d0_32 = (int)(k % P0);
k = (k - d0_32) / P0;
x0 += d0_32 * q0_32;
q0_33 = q0_32 / P0;
d0_33 = (int)(k % P0);
k = (k - d0_33) / P0;
x0 += d0_33 * q0_33;
q0_34 = q0_33 / P0;
d0_34 = (int)(k % P0);
k = (k - d0_34) / P0;
x0 += d0_34 * q0_34;
q0_35 = q0_34 / P0;
d0_35 = (int)(k % P0);
k = (k - d0_35) / P0;
x0 += d0_35 * q0_35;
q0_36 = q0_35 / P0;
d0_36 = (int)(k % P0);
k = (k - d0_36) / P0;
x0 += d0_36 * q0_36;
q0_37 = q0_36 / P0;
d0_37 = (int)(k % P0);
k = (k - d0_37) / P0;
x0 += d0_37 * q0_37;
q0_38 = q0_37 / P0;
d0_38 = (int)(k % P0);
k = (k - d0_38) / P0;
x0 += d0_38 * q0_38;
q0_39 = q0_38 / P0;
d0_39 = (int)(k % P0);
k = (k - d0_39) / P0;
x0 += d0_39 * q0_39;
q0_40 = q0_39 / P0;
d0_40 = (int)(k % P0);
k = (k - d0_40) / P0;
x0 += d0_40 * q0_40;
q0_41 = q0_40 / P0;
d0_41 = (int)(k % P0);
k = (k - d0_41) / P0;
x0 += d0_41 * q0_41;
q0_42 = q0_41 / P0;
d0_42 = (int)(k % P0);
k = (k - d0_42) / P0;
x0 += d0_42 * q0_42;
q0_43 = q0_42 / P0;
d0_43 = (int)(k % P0);
k = (k - d0_43) / P0;
x0 += d0_43 * q0_43;
q0_44 = q0_43 / P0;
d0_44 = (int)(k % P0);
k = (k - d0_44) / P0;
x0 += d0_44 * q0_44;
q0_45 = q0_44 / P0;
d0_45 = (int)(k % P0);
k = (k - d0_45) / P0;
x0 += d0_45 * q0_45;
q0_46 = q0_45 / P0;
d0_46 = (int)(k % P0);
k = (k - d0_46) / P0;
x0 += d0_46 * q0_46;
q0_47 = q0_46 / P0;
d0_47 = (int)(k % P0);
k = (k - d0_47) / P0;
x0 += d0_47 * q0_47;
q0_48 = q0_47 / P0;
d0_48 = (int)(k % P0);
k = (k - d0_48) / P0;
x0 += d0_48 * q0_48;
q0_49 = q0_48 / P0;
d0_49 = (int)(k % P0);
k = (k - d0_49) / P0;
x0 += d0_49 * q0_49;
q0_50 = q0_49 / P0;
d0_50 = (int)(k % P0);
k = (k - d0_50) / P0;
x0 += d0_50 * q0_50;
q0_51 = q0_50 / P0;
d0_51 = (int)(k % P0);
k = (k - d0_51) / P0;
x0 += d0_51 * q0_51;
q0_52 = q0_51 / P0;
d0_52 = (int)(k % P0);
k = (k - d0_52) / P0;
x0 += d0_52 * q0_52;
q0_53 = q0_52 / P0;
d0_53 = (int)(k % P0);
k = (k - d0_53) / P0;
x0 += d0_53 * q0_53;
q0_54 = q0_53 / P0;
d0_54 = (int)(k % P0);
k = (k - d0_54) / P0;
x0 += d0_54 * q0_54;
q0_55 = q0_54 / P0;
d0_55 = (int)(k % P0);
k = (k - d0_55) / P0;
x0 += d0_55 * q0_55;
q0_56 = q0_55 / P0;
d0_56 = (int)(k % P0);
k = (k - d0_56) / P0;
x0 += d0_56 * q0_56;
q0_57 = q0_56 / P0;
d0_57 = (int)(k % P0);
k = (k - d0_57) / P0;
x0 += d0_57 * q0_57;
q0_58 = q0_57 / P0;
d0_58 = (int)(k % P0);
k = (k - d0_58) / P0;
x0 += d0_58 * q0_58;
q0_59 = q0_58 / P0;
d0_59 = (int)(k % P0);
k = (k - d0_59) / P0;
x0 += d0_59 * q0_59;
q0_60 = q0_59 / P0;
d0_60 = (int)(k % P0);
k = (k - d0_60) / P0;
x0 += d0_60 * q0_60;
q0_61 = q0_60 / P0;
d0_61 = (int)(k % P0);
k = (k - d0_61) / P0;
x0 += d0_61 * q0_61;
q0_62 = q0_61 / P0;
d0_62 = (int)(k % P0);
k = (k - d0_62) / P0;
x0 += d0_62 * q0_62;

k = index;
x1 = 0;
q1_0 = 1.0 / P1;
d1_0 = (int)(k % P1);
k = (k - d1_0) / P1;
x1 += d1_0 * q1_0;
q1_1 = q1_0 / P1;
d1_1 = (int)(k % P1);
k = (k - d1_1) / P1;
x1 += d1_1 * q1_1;
q1_2 = q1_1 / P1;
d1_2 = (int)(k % P1);
k = (k - d1_2) / P1;
x1 += d1_2 * q1_2;
q1_3 = q1_2 / P1;
d1_3 = (int)(k % P1);
k = (k - d1_3) / P1;
x1 += d1_3 * q1_3;
q1_4 = q1_3 / P1;
d1_4 = (int)(k % P1);
k = (k - d1_4) / P1;
x1 += d1_4 * q1_4;
q1_5 = q1_4 / P1;
d1_5 = (int)(k % P1);
k = (k - d1_5) / P1;
x1 += d1_5 * q1_5;
q1_6 = q1_5 / P1;
d1_6 = (int)(k % P1);
k = (k - d1_6) / P1;
x1 += d1_6 * q1_6;
q1_7 = q1_6 / P1;
d1_7 = (int)(k % P1);
k = (k - d1_7) / P1;
x1 += d1_7 * q1_7;
q1_8 = q1_7 / P1;
d1_8 = (int)(k % P1);
k = (k - d1_8) / P1;
x1 += d1_8 * q1_8;
q1_9 = q1_8 / P1;
d1_9 = (int)(k % P1);
k = (k - d1_9) / P1;
x1 += d1_9 * q1_9;
q1_10 = q1_9 / P1;
d1_10 = (int)(k % P1);
k = (k - d1_10) / P1;
x1 += d1_10 * q1_10;
q1_11 = q1_10 / P1;
d1_11 = (int)(k % P1);
k = (k - d1_11) / P1;
x1 += d1_11 * q1_11;
q1_12 = q1_11 / P1;
d1_12 = (int)(k % P1);
k = (k - d1_12) / P1;
x1 += d1_12 * q1_12;
q1_13 = q1_12 / P1;
d1_13 = (int)(k % P1);
k = (k - d1_13) / P1;
x1 += d1_13 * q1_13;
q1_14 = q1_13 / P1;
d1_14 = (int)(k % P1);
k = (k - d1_14) / P1;
x1 += d1_14 * q1_14;
q1_15 = q1_14 / P1;
d1_15 = (int)(k % P1);
k = (k - d1_15) / P1;
x1 += d1_15 * q1_15;
q1_16 = q1_15 / P1;
d1_16 = (int)(k % P1);
k = (k - d1_16) / P1;
x1 += d1_16 * q1_16;
q1_17 = q1_16 / P1;
d1_17 = (int)(k % P1);
k = (k - d1_17) / P1;
x1 += d1_17 * q1_17;
q1_18 = q1_17 / P1;
d1_18 = (int)(k % P1);
k = (k - d1_18) / P1;
x1 += d1_18 * q1_18;
q1_19 = q1_18 / P1;
d1_19 = (int)(k % P1);
k = (k - d1_19) / P1;
x1 += d1_19 * q1_19;
q1_20 = q1_19 / P1;
d1_20 = (int)(k % P1);
k = (k - d1_20) / P1;
x1 += d1_20 * q1_20;
q1_21 = q1_20 / P1;
d1_21 = (int)(k % P1);
k = (k - d1_21) / P1;
x1 += d1_21 * q1_21;
q1_22 = q1_21 / P1;
d1_22 = (int)(k % P1);
k = (k - d1_22) / P1;
x1 += d1_22 * q1_22;
q1_23 = q1_22 / P1;
d1_23 = (int)(k % P1);
k = (k - d1_23) / P1;
x1 += d1_23 * q1_23;
q1_24 = q1_23 / P1;
d1_24 = (int)(k % P1);
k = (k - d1_24) / P1;
x1 += d1_24 * q1_24;
q1_25 = q1_24 / P1;
d1_25 = (int)(k % P1);
k = (k - d1_25) / P1;
x1 += d1_25 * q1_25;
q1_26 = q1_25 / P1;
d1_26 = (int)(k % P1);
k = (k - d1_26) / P1;
x1 += d1_26 * q1_26;
q1_27 = q1_26 / P1;
d1_27 = (int)(k % P1);
k = (k - d1_27) / P1;
x1 += d1_27 * q1_27;
q1_28 = q1_27 / P1;
d1_28 = (int)(k % P1);
k = (k - d1_28) / P1;
x1 += d1_28 * q1_28;
q1_29 = q1_28 / P1;
d1_29 = (int)(k % P1);
k = (k - d1_29) / P1;
x1 += d1_29 * q1_29;
q1_30 = q1_29 / P1;
d1_30 = (int)(k % P1);
k = (k - d1_30) / P1;
x1 += d1_30 * q1_30;
q1_31 = q1_30 / P1;
d1_31 = (int)(k % P1);
k = (k - d1_31) / P1;
x1 += d1_31 * q1_31;
q1_32 = q1_31 / P1;
d1_32 = (int)(k % P1);
k = (k - d1_32) / P1;
x1 += d1_32 * q1_32;
q1_33 = q1_32 / P1;
d1_33 = (int)(k % P1);
k = (k - d1_33) / P1;
x1 += d1_33 * q1_33;
q1_34 = q1_33 / P1;
d1_34 = (int)(k % P1);
k = (k - d1_34) / P1;
x1 += d1_34 * q1_34;
q1_35 = q1_34 / P1;
d1_35 = (int)(k % P1);
k = (k - d1_35) / P1;
x1 += d1_35 * q1_35;
q1_36 = q1_35 / P1;
d1_36 = (int)(k % P1);
k = (k - d1_36) / P1;
x1 += d1_36 * q1_36;
q1_37 = q1_36 / P1;
d1_37 = (int)(k % P1);
k = (k - d1_37) / P1;
x1 += d1_37 * q1_37;
q1_38 = q1_37 / P1;
d1_38 = (int)(k % P1);
k = (k - d1_38) / P1;
x1 += d1_38 * q1_38;
q1_39 = q1_38 / P1;
d1_39 = (int)(k % P1);
k = (k - d1_39) / P1;
x1 += d1_39 * q1_39;

